@model IEnumerable<VetClinicManager.DTOs.Visits.VisitListReceptionistDto>

@* Ta dyrektywa jest potrzebna do dostępu do enumów VisitStatus i VisitPriority *@
@using VetClinicManager.Models.Enums

@{
    ViewData["Title"] = "Wszystkie Wizyty";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>@ViewData["Title"]</h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Zarejestruj nową wizytę
        </a>
    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info mt-3" role="alert">
            Brak zarejestrowanych wizyt w systemie.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Tytuł</th>
                        <th>Data Utworzenia</th>
                        <th>Status</th>
                        <th>Priorytet</th>
                        <th>Zwierzę</th>
                        <th>Właściciel</th>
                        <th>Lekarz Prowadzący</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <strong>@Html.DisplayFor(modelItem => item.Title)</strong>
                            </td>
                            <td>
                                @item.CreatedDate.ToString("d")
                            </td>
                            <td>
                                @{
                                    string statusBadgeClass = item.Status switch
                                    {
                                        VisitStatus.Scheduled => "bg-warning text-dark",
                                        VisitStatus.Completed => "bg-success",
                                        VisitStatus.InProgress => "bg-primary",
                                        VisitStatus.Cancelled => "bg-danger",
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @statusBadgeClass">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </span>
                            </td>
                            <td>
                                @{
                                    string priorityBadgeClass = item.Priority switch
                                    {
                                        VisitPriority.Critical => "bg-danger",
                                        VisitPriority.Urgent => "bg-warning text-dark",
                                        VisitPriority.Normal => "bg-info",
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @priorityBadgeClass">
                                    @Html.DisplayFor(modelItem => item.Priority)
                                </span>
                            </td>
                            <td>
                                @(item.Animal?.Name) (@(item.Animal?.Species))
                            </td>
                            <td>
                                @if (item.Owner != null)
                                {
                                    <span>@(item.Owner.FirstName) @(item.Owner.LastName)</span>
                                }
                                else
                                {
                                    <span class="text-muted">Brak</span>
                                }
                            </td>
                            <td>
                                @if (item.AssignedVet != null)
                                {
                                    <span>@(item.AssignedVet.FirstName) @(item.AssignedVet.LastName)</span>
                                }
                                else
                                {
                                    <span class="text-muted">Nieprzypisany</span>
                                }
                            </td>
                            <td class="text-nowrap">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="Szczegóły">
                                    <i class="bi bi-info-circle"></i><span class="ms-1">Szczegóły</span>
                                </a>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary ms-1" title="Edytuj">
                                    <i class="bi bi-pencil"></i><span class="ms-1">Edytuj</span>
                                </a>
    
                                @* Dla przycisku "Usuń" użyjemy formularza, tak jak poprzednio, dla bezpieczeństwa *@
                                <form asp-controller="Visits" asp-action="Delete" method="post" class="d-inline"
                                      onsubmit="return confirm('Czy na pewno chcesz usunąć tę wizytę? Tej operacji nie można cofnąć.');">
                                    <input type="hidden" name="id" value="@item.Id" />
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-sm btn-danger ms-1" title="Usuń">
                                        <i class="bi bi-trash"></i><span class="ms-1">Usuń</span>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>